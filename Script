--[[ Cashew's Script • GUI with Emoji Toggles ]]--

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local MarketplaceService = game:GetService("MarketplaceService")

local player = Players.LocalPlayer

-- Game name
local gameName = "Unknown Game"
pcall(function()
	gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
end)

-- Main GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "CashewScriptGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Toggle Button
local toggleBtn = Instance.new("TextButton", gui)
toggleBtn.Size = UDim2.new(0, 140, 0, 40)
toggleBtn.Position = UDim2.new(0, 10, 0, 10)
toggleBtn.Text = "Open Cashew's Script"
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 14
toggleBtn.BorderSizePixel = 0
toggleBtn.AutoButtonColor = true
toggleBtn.Active = true
toggleBtn.Draggable = true
toggleBtn.ClipsDescendants = true
Instance.new("UICorner", toggleBtn)

-- Main Frame
local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 520, 0, 360) -- increased size to fit more content
main.Position = UDim2.new(0.5, -260, 0.5, -180)
main.Visible = false
main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
main.BorderSizePixel = 0
Instance.new("UICorner", main)

-- Drag Bar
local dragBar = Instance.new("Frame", main)
dragBar.Size = UDim2.new(1, 0, 0, 30)
dragBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
dragBar.Active = true
Instance.new("UICorner", dragBar).CornerRadius = UDim.new(0, 6)

local title = Instance.new("TextLabel", dragBar)
title.Size = UDim2.new(1, 0, 1, 0)
title.BackgroundTransparency = 1
title.Text = "Cashew's Script • " .. gameName
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 14
title.TextXAlignment = Enum.TextXAlignment.Center

-- Drag logic
local dragging = false
local dragStart, startPos

dragBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = main.Position
	end
end)

dragBar.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)

-- Tabs
local tabNames = {"Main", "Player", "Settings"}
local tabButtons = {}
local tabFrames = {}

for i, name in ipairs(tabNames) do
	local btn = Instance.new("TextButton", main)
	btn.Size = UDim2.new(0, 100, 0, 40)
	btn.Position = UDim2.new(0, 0, 0, 30 + (i - 1) * 40)
	btn.Text = name
	btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	Instance.new("UICorner", btn)
	tabButtons[name] = btn

	local frame = Instance.new("Frame", main)
	frame.Position = UDim2.new(0, 100, 0, 30)
	frame.Size = UDim2.new(0, 420, 0, 330)
	frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	frame.Visible = (i == 1)
	Instance.new("UICorner", frame)
	tabFrames[name] = frame
end

for name, btn in pairs(tabButtons) do
	btn.MouseButton1Click:Connect(function()
		for _, f in pairs(tabFrames) do f.Visible = false end
		tabFrames[name].Visible = true
	end)
end

-- Toggle GUI
toggleBtn.MouseButton1Click:Connect(function()
	main.Visible = not main.Visible
	toggleBtn.Text = main.Visible and "Close Cashew's Script" or "Open Cashew's Script"
	-- Lock camera when GUI visible
	if main.Visible then
		UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
	else
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	end
end)

-- === Player Tab Enhancements ===
local function getHumanoid()
	local char = player.Character or player.CharacterAdded:Wait()
	return char:WaitForChild("Humanoid"), char
end

local playerTab = tabFrames["Player"]

-- Slider Helper
local function createSlider(parent, labelText, minVal, maxVal, defaultVal, onChange, yPos)
	local label = Instance.new("TextLabel", parent)
	label.Position = UDim2.new(0, 10, 0, yPos)
	label.Size = UDim2.new(0, 180, 0, 25)
	label.Text = labelText .. ": " .. tostring(defaultVal)
	label.TextColor3 = Color3.new(1,1,1)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left

	local sliderBack = Instance.new("Frame", parent)
	sliderBack.Position = UDim2.new(0, 10, 0, yPos + 30)
	sliderBack.Size = UDim2.new(0, 200, 0, 8)
	sliderBack.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	Instance.new("UICorner", sliderBack)

	local knob = Instance.new("Frame", sliderBack)
	knob.Size = UDim2.new(0, 16, 0, 16)
	knob.Position = UDim2.new((defaultVal - minVal) / (maxVal - minVal), -8, 0.5, -8)
	knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Instance.new("UICorner", knob).CornerRadius = UDim.new(1, 0)
	knob.ZIndex = 2

	local dragging = false
	knob.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
		end
	end)
	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.Position then
			local relX = math.clamp((input.Position.X - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
			local value = math.floor(minVal + (maxVal - minVal) * relX)
			knob.Position = UDim2.new(relX, -8, 0.5, -8)
			label.Text = labelText .. ": " .. tostring(value)
			onChange(value)
		end
	end)
end

-- WalkSpeed slider
createSlider(playerTab, "WalkSpeed", 16, 200, 16, function(v)
	local humanoid = getHumanoid()
	humanoid.WalkSpeed = v
end, 10)

-- JumpPower slider
createSlider(playerTab, "JumpPower", 50, 300, 50, function(v)
	local humanoid = getHumanoid()
	humanoid.JumpPower = v
end, 90)

-- HipHeight slider
createSlider(playerTab, "HipHeight", 0, 10, 2, function(v)
	local humanoid = getHumanoid()
	humanoid.HipHeight = v
end, 170)

-- === Toggle Buttons with Emoji ===

-- Infinite Jump toggle
local infJump = false
local infJumpBtn = Instance.new("TextButton", playerTab)
infJumpBtn.Position = UDim2.new(0, 10, 0, 230)
infJumpBtn.Size = UDim2.new(0, 190, 0, 30)
infJumpBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
infJumpBtn.TextColor3 = Color3.new(1, 1, 1)
infJumpBtn.Font = Enum.Font.GothamBold
infJumpBtn.TextSize = 14
infJumpBtn.Text = "❌ Infinite Jump"
Instance.new("UICorner", infJumpBtn)

infJumpBtn.MouseButton1Click:Connect(function()
	infJump = not infJump
	infJumpBtn.Text = (infJump and "✅ " or "❌ ") .. "Infinite Jump"
end)

UserInputService.JumpRequest:Connect(function()
	if infJump then
		local char = player.Character
		if char and char:FindFirstChildOfClass("Humanoid") then
			char:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
		end
	end
end)

-- Invisibility toggle
local invis = false
local invisBtn = Instance.new("TextButton", playerTab)
invisBtn.Position = UDim2.new(0, 10, 0, 270)
invisBtn.Size = UDim2.new(0, 190, 0, 30)
invisBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
invisBtn.TextColor3 = Color3.new(1, 1, 1)
invisBtn.Font = Enum.Font.GothamBold
invisBtn.TextSize = 14
invisBtn.Text = "❌ Invisibility"
Instance.new("UICorner", invisBtn)

invisBtn.MouseButton1Click:Connect(function()
	invis = not invis
	invisBtn.Text = (invis and "✅ " or "❌ ") .. "Invisibility"
	local _, char = getHumanoid()
	if invis then
		for _, part in pairs(char:GetDescendants()) do
			if part:IsA("BasePart") or part:IsA("Decal") then
				part.Transparency = 1
			end
		end
	else
		for _, part in pairs(char:GetDescendants()) do
			if part:IsA("BasePart") or part:IsA("Decal") then
				part.Transparency = 0
			end
		end
	end
end)

-- NoClip toggle
local noclip = false
local noclipBtn = Instance.new("TextButton", playerTab)
noclipBtn.Position = UDim2.new(0, 10, 0, 310)
noclipBtn.Size = UDim2.new(0, 190, 0, 30)
noclipBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
noclipBtn.TextColor3 = Color3.new(1, 1, 1)
noclipBtn.Font = Enum.Font.GothamBold
noclipBtn.TextSize = 14
noclipBtn.Text = "❌ NoClip"
Instance.new("UICorner", noclipBtn)

local RunService = game:GetService("RunService")

noclipBtn.MouseButton1Click:Connect(function()
	noclip = not noclip
	noclipBtn.Text = (noclip and "✅ " or "❌ ") .. "NoClip"
end)

RunService.Stepped:Connect(function()
	if noclip then
		local char = player.Character
		if char then
			for _, part in pairs(char:GetChildren()) do
				if part:IsA("BasePart") and part.CanCollide then
					part.CanCollide = false
				end
			end
		end
	end
end)

-- === Main Tab Enhancements ===
local mainTab = tabFrames["Main"]

-- Example: A welcome label + game info
local welcomeLabel = Instance.new("TextLabel", mainTab)
welcomeLabel.Size = UDim2.new(1, -20, 0, 40)
welcomeLabel.Position = UDim2.new(0, 10, 0, 10)
welcomeLabel.BackgroundTransparency = 1
welcomeLabel.TextColor3 = Color3.new(1,1,1)
welcomeLabel.Font = Enum.Font.GothamBold
welcomeLabel.TextSize = 20
welcomeLabel.Text = "Welcome to Cashew's Script for " .. gameName
welcomeLabel.TextXAlignment = Enum.TextXAlignment.Center

-- A simple button example: Reset Character
local resetBtn = Instance.new("TextButton", mainTab)
resetBtn.Position = UDim2.new(0, 10, 0, 60)
resetBtn.Size = UDim2.new(0, 180, 0, 40)
resetBtn.Text = "Reset Character"
resetBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
resetBtn.TextColor3 = Color3.new(1,1,1)
resetBtn.Font = Enum.Font.GothamBold
resetBtn.TextSize = 16
Instance.new("UICorner", resetBtn)

resetBtn.MouseButton1Click:Connect(function()
	local character = player.Character
	if character then
		character:BreakJoints()
	end
end)

-- Add a label for Player Health and a refresh button
local healthLabel = Instance.new("TextLabel", mainTab)
healthLabel.Position = UDim2.new(0, 210, 0, 60)
healthLabel.Size = UDim2.new(0, 200, 0, 40)
healthLabel.BackgroundTransparency = 1
healthLabel.TextColor3 = Color3.new(1,1,1)
healthLabel.Font = Enum.Font.GothamBold
healthLabel.TextSize = 16
healthLabel.TextXAlignment = Enum.TextXAlignment.Left

local function updateHealth()
	local humanoid = getHumanoid()
	if humanoid then
		healthLabel.Text = ("Health: %d / %d"):format(humanoid.Health, humanoid.MaxHealth)
	end
end

updateHealth()

local refreshHealthBtn = Instance.new("TextButton", mainTab)
refreshHealthBtn.Position = UDim2.new(0, 210, 0, 100)
refreshHealthBtn.Size = UDim2.new(0, 100, 0, 30)
refreshHealthBtn.Text = "Refresh Health"
refreshHealthBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
refreshHealthBtn.TextColor3 = Color3.new(1,1,1)
refreshHealthBtn.Font = Enum.Font.Gotham
refreshHealthBtn.TextSize = 14
Instance.new("UICorner", refreshHealthBtn)

refreshHealthBtn.MouseButton1Click:Connect(updateHealth)

-- === Settings Tab ===
local settingsTab = tabFrames["Settings"]

-- Dark Mode toggle example
local darkMode = false
local darkModeBtn = Instance.new("TextButton", settingsTab)
darkModeBtn.Position = UDim2.new(0, 10, 0, 10)
darkModeBtn.Size = UDim2.new(0, 200, 0, 40)
darkModeBtn.Text = "❌ Dark Mode"
darkModeBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
darkModeBtn.TextColor3 = Color3.new(1, 1, 1)
darkModeBtn.Font = Enum.Font.GothamBold
darkModeBtn.TextSize = 16
Instance.new("UICorner", darkModeBtn)

local function setDarkMode(enabled)
	if enabled then
		main.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
		for _, frame in pairs(tabFrames) do
			frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		end
	else
		main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		for _, frame in pairs(tabFrames) do
			frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
		end
	end
end

darkModeBtn.MouseButton1Click:Connect(function()
	darkMode = not darkMode
	darkModeBtn.Text = (darkMode and "✅ " or "❌ ") .. "Dark Mode"
	setDarkMode(darkMode)
end)

-- Mouse Lock Fix: Unlock camera if GUI closes by other means
local function unlockCamera()
	if UserInputService.MouseBehavior == Enum.MouseBehavior.LockCenter and not main.Visible then
		UserInputService.MouseBehavior = Enum.MouseBehavior.Default
	end
end

UserInputService.WindowFocusReleased:Connect(unlockCamera)
UserInputService.InputBegan:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.Escape then
		unlockCamera()
	end
end)
